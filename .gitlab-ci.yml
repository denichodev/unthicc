image: docker:latest

services:
  - docker:dind

stages:
  - test
  - build
  - deploy

variables:
  KEYS_IMAGE: $CI_REGISTRY_IMAGE/keys
  NGINX_IMAGE: $CI_REGISTRY_IMAGE/nginx
  KEYS_TEST_TAG: $CI_REGISTRY_IMAGE/keys:$CI_COMMIT_REF_NAME
  NGINX_TEST_TAG: $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_NAME
  KEYS_RELEASE_TAG: $KEYS_IMAGE:latest
  NGINX_RELEASE_TAG: $NGINX_IMAGE:latest

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

test-keys:
  stage: test
  script:
    - docker pull "${KEYS_TEST_TAG}-deps" || true
    - docker build --target dependencies --cache-from "${KEYS_TEST_TAG}-deps" -f services/keys/Dockerfile . -t "${KEYS_TEST_TAG}-deps"
    - docker run "${KEYS_TEST_TAG}-deps" yarn test
    - docker push "${KEYS_TEST_TAG}-deps"

build-keys:
  stage: build
  script:
    - docker pull "${KEYS_TEST_TAG}-deps" || true
    - docker build --cache-from "${KEYS_TEST_TAG}-deps" -f services/keys/Dockerfile . -t "$KEYS_TEST_TAG"
    - docker push "$KEYS_TEST_TAG"
  only:
    changes:
      - .gitlab-ci.yml
      - package.json
      - backpack.config.js
      - babel.config.js
      - services/keys/**/*

build-nginx:
  stage: build
  script: 
    - docker build -f services/nginx/Dockerfile . -t "$NGINX_TEST_TAG"
    - docker push "$NGINX_TEST_TAG"
  only:
    changes:
      - .gitlab-ci.yml
      - services/nginx/**/*

deploy-keys:
  image: alpine:3.8
  stage: deploy
  before_script:
    - apk add --update --no-cache openssh sshpass
  script:
    - sshpass -v
    - ./scripts/deploy.sh $SSH_PASS $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD
  when: manual
  only:
    - master
